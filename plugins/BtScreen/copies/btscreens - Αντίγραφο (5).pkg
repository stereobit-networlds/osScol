typeof class   = S;;
typeof files = [S r1];;

 
 
 
  
fun cbDestroy(o,docName) =
  _RSunregister this docName;  
  0
;;

fun extension(fi) =

	let 0->j in
	let 0->find in
	(
	  while ((set find=strfind "." fi j)!=nil) do 
	  (
		  set j=find+1
	  );
	substr fi j (strlen fi)-j
	)
;;


fun cbRegister (ui, cli, action, param, z) =
  let z -> [o fileName nrand] in
  let if fileName == nil then "logo.bmp" else fileName -> fileName in
  (
    let (strcatn "tmp/logo/"::(substr _getlongname strcat nrand (substr fileName 0 (strfind "." fileName 1)) "" "#" 1 8)::"."::(extension fileName)::nil) -> fileNameOnClient in /* ??? modifié */
      if (_checkpack fileNameOnClient) == nil then
        UsendMessage ui cli "registered" "logo.bmp"
      else
        UsendMessage ui cli "registered" fileNameOnClient;
		
	  /*sen msg to download files*/	
	  if files != nil then
        UsendMessage ObUi o cli "donwloadImages" linebuild files
      else
        0;		
    0
  )
;;

fun getImages(path)=
  set files =  _listoffiles path;
  _RSregisterfiles this files RSfile+RScontrol;
  0;;

fun newOb(o) =
  let hd UgetParam ObUi o "fichier" -> fileName in
  let hd UgetParam ObUi o "nrand" -> nrand in /* ??? ajouté par moi */
  let strcat ObName o fileName -> docName in
  (
    _RSregister this docName RScontrol+RSfile (strcatn "tmp/logo/"::(substr _getlongname strcat nrand (substr fileName 0 (strfind "." fileName 1)) "" "#" 1 8)::"."::(extension fileName)::nil); /*??? modifié par moi */	
    ObCbDestroy o mkfun2 @cbDestroy docName;
    UcbMessage ObUi o  
        ["register" mkfun5 @cbRegister [o fileName nrand]]:: /* ???modifié */
        nil;
	
	/*register files to download */
    let hd UgetParam ObUi o "rpath" -> path in
    getImages path;	
    0
  )
;;


fun IniPlug(file) =
  set class=getInfo strextr _getpack _checkpack file "name";  
  PlugRegister class @newOb nil;
  0
;;
