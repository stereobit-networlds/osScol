/* Dispatcher Client - DMS - june 2014 - by stereobit */

defcom CsetPos=setPos S;;
defcom CchangeCell=changeCell I S;;

typeof iCellA = S;;
typeof iCellB = S;;
typeof iCellC = S;;
typeof iCellD = S;;
typeof iCellE = S;;
typeof iCellF = S;;
typeof defaultCell = I;;    /*default cell entry when no client position */
typeof iCellNumber = I;;     /* the number of c3d3 cells */

typeof paramList = [S r1];;
typeof timer = Timer;;
typeof cellActive = I;;     /* active cell */

var posCheckTime = 20000;;   /* check every n seconds for jumping to other 3d cell */
var iniPath="locked/conf/stereobit/";;
var log=1;;

fun saveLog(fname, s)=
 if (log==1) then
 (
    let strcatn (iniPath)::fname::nil -> file in
 
	let _appendpack s _getmodifypack file ->append in
	if (append==-1) then
		_createpack s _getmodifypack file
	else nil
 )
 else nil;;

fun _echo(x,s)= 
  saveLog "_echo.txt" strcat x "\n";;
/*  
fun _echo(x,s)= 
	_DMSevent this "hear" strcat strcat ">> " x "\n" nil
;;  
*/  
/*convert radians to degrees */
fun rad2deg(r) = r *. (180.0 /. PIf);;  
 
/*convert degrees to radians */
fun deg2rad(d) = d *. (PIf /. 180.0);; 
  
fun distanceP (lat1, lon1, lat2, lon2) =

  let 6371.0 -> R in /*(Mean) radius of earth in km */
  let deg2rad lat1 -> f1 in
  let deg2rad lon1 -> g1 in
  let deg2rad lat2 -> f2 in
  let deg2rad lon2 -> g2 in
  
  let (g2-.g1) *. cos (f1+.f2/.2.0) -> x in
  let (f2-.f1) -> y in
  (sqrt ((x*.x) +. (y*.y))) *. R;;  
  
//read data from line 
fun GetData(line, n) =
  let 1 -> i in
  let 0 -> ind1 in
  let 0 -> ind2 in
  (
    while (i < n) do
    (
      set ind1 = 1 + strfind "," line ind1;
      set i = i + 1;
    );
    set ind1 = 1 + strfind "," line ind1;
    set ind2 = strfind "," line ind1;
    substr line ind1 (ind2 - ind1);
  );;  
  
/*calculate and write init position form cell to cell when gps is off ? */
fun cellTransit (fromCell, toCell) = 

  //let readLocation -> position in /* latlon */
  //let GetAvatarPosition -> [x y z] in /* x y z*/
  
0;;   
  

fun activate(from,action,param,rep)=
 if !strcmp action "setPos" then /*NOT USED*/
 (
  //let strcatn iniPath::DMSname::"/clocation"::(itoa DMSid)::".txt"::nil -> posfile in	 
  let strcatn iniPath::DMSname::"/clocation.txt"::nil -> posfile in
  let _getpack _checkpack posfile -> position in 
  
  _echo strcat "Dispatcher:" position
  
  0;
 ) 
 else nil;;
 
fun __getPos(s) = 
  //let strcatn iniPath::DMSname::"/clocation"::(itoa DMSid)::".txt"::nil -> posfile in	 
  let strcatn iniPath::DMSname::"/clocation.txt"::nil -> posfile in
  let _getpack _checkpack posfile -> position in 
  
  _DMSsend this CsetPos [position]
;;

/*update active-now in cell variable from server */
fun __setActiveCell(c) = set cellActive = c;;

/*2 plus worlds*/
fun checkPosition2 (list, position) =
  if list==nil then
    nil
  else
    let hd list -> cellParams in
	(
	    let atoi substr cellParams 0 1 -> thisCellID in
        let atof GetData cellParams 1 -> centerX in
        let atof GetData cellParams 2 -> centerY in
        let atof GetData cellParams 3 -> radius in

	    let position -> [lat lon] in	  
        let distanceP lat lon centerX centerY -> dist in
	
        _echo strcatn "Check cell:"::cellParams::"->"::(ftoa centerX)::","::(ftoa centerY)::"->"::(ftoa radius)::"->"::(ftoa dist)::nil   	
		
        if (thisCellID == cellActive) && (dist >=. radius) then
        (
          let strbuild ((ftoa lat)::" "::(ftoa lon)::nil)::((ftoa centerX)::"\n"::(ftoa centerY)::"\n"::(ftoa radius)::nil)::nil -> datal in		
          _DMSsend this CchangeCell [thisCellID datal];/* server calc the new pos/entry */
		  set cellActive = thisCellID;
		  0
	    )  
        else 
		   checkPosition2 tl list position
  	);;
	  
	
fun rflTimer2 (t, param)=

  let lineextr param -> paraml in 

  //let strcatn iniPath::DMSname::"/clocation"::(itoa DMSid)::".txt"::nil -> posfile in	 
  let strcatn iniPath::DMSname::"/clocation.txt"::nil -> posfile in	 
  let _getpack _checkpack posfile -> position in
  let atof substr posfile 0 9 -> lat in
  let atof substr posfile 10 9 -> lon in 
  
  //_echo strcatn "Dispatcher2:"::posfile::"-"::position::"-"::param::nil  
  checkPosition2 paraml [lat lon];
  0;;

/* check position per n sec */
fun checkPosition (x,position) =
  if (x==nil) then
    nil
  else 
  ( 
    /*entry at dispacher cell line */ 
    let atoi substr x 0 1 -> currCellID in /*1st char count 1-6*/
	let atoi substr x 2 1 -> gotoCellID in /*3nd char count next cell*/
	
	/*radians overlaping stopper, allowing check only by current cellid*/ 
	if (cellActive==currCellID) then 
	(
      let atof GetData x 1 -> centerX in
      let atof GetData x 2 -> centerY in
      let atof GetData x 3 -> radius in
      let hd position -> coords in
      //_echo strcatn "Dispatcher:"::x::"->"::(coords)::nil   
  
      let substr coords 0 9 -> latitude in
      let substr coords 10 9 -> longitude in 
      //_echo strcatn "Coords:"::(latitude)::"->"::(longitude)::nil
  
      let distanceP (atof latitude) (atof longitude) centerX centerY -> dist in
	  let if dist>=.radius then strcat " YES goto " itoa gotoCellID else " NO" -> say in
      _echo strcatn "Radius ("::(itoa currCellID)::")"::(ftoa radius)::" > "::(ftoa dist)::say::nil    
  
      if (dist>=.radius) then
      (
        set cellActive = gotoCellID;	
        /*_DMSsend this CchangeCell [gotoCellID currCellID] DISABLED for test new fun type */
	  )  
      else 0; 
	)
	else 0;
  );;  

fun rflTimer (t, param)=

  //let strcatn iniPath::DMSname::"/clocation"::(itoa DMSid)::".txt"::nil -> posfile in	 
  let strcatn iniPath::DMSname::"/clocation.txt"::nil -> posfile in	 
  let _getpack _checkpack posfile -> position in
  
  let lineextr position -> p in
  let lineextr param -> pl in  
  
  //_echo strcatn "Dispatcher:"::posfile::"-"::position::"-"::param::nil  
  
  if (sizelist p) && (sizelist pl) then 
    apply_on_list pl @checkPosition p
  else	
    0;; 

fun IniDMI(param)=   
 
  _DMSregisterDMI this @activate nil;
  
  set timer = _rfltimer _starttimer _channel posCheckTime @rflTimer2 param;
  0;;